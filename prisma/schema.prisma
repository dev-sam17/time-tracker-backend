generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(cuid())
  userId        String    @unique
  email         String    @unique
  username      String    @unique
  firstName     String?
  lastName      String?
  fullName      String?
  avatarUrl     String?
  phone         String?
  provider      String? // google, email, etc.
  providerId    String? // provider-specific ID
  emailVerified Boolean   @default(false)
  phoneVerified Boolean   @default(false)
  isActive      Boolean   @default(true)
  trackers      Tracker[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Tracker {
  id            String         @id @default(cuid())
  userId        String
  trackerName   String
  targetHours   Int
  archived      Boolean        @default(false)
  description   String         @default("")
  workDays      String         @default("1,2,3,4,5") // Default Mon-Fri (0=Sun, 1=Mon, ..., 6=Sat)
  sessions      Session[]
  activeSession ActiveSession?
  user          User           @relation(fields: [userId], references: [userId], onDelete: Cascade)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Session {
  id              String   @id @default(cuid())
  trackerId       String
  startTime       DateTime
  endTime         DateTime
  durationMinutes Int
  tracker         Tracker  @relation(fields: [trackerId], references: [id], onDelete: Cascade)
}

model ActiveSession {
  trackerId String   @id
  startTime DateTime
  tracker   Tracker  @relation(fields: [trackerId], references: [id], onDelete: Cascade)
}
